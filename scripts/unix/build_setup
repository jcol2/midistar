#!/bin/bash
set -e

# Text colours
col="[34m"  # Blue
def="[0m"   # Default

# Coloured echo function
cecho() {
    echo -e "\x1B$col$1\x1B$def"
    sleep 1
}

# Platform detection
if [ "$(uname)" == "Darwin" ]; then
    echo "OSX detected."
elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
    echo "Linux detected."
elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ]; then
    echo "Use build_setup.bat in the \"scripts\win32\" folder for Windows platforms."
    exit
elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW64_NT" ]; then
    echo "Use build_setup.bat in the \"scripts\win32\" folder for Windows platforms."
    exit
else
	echo "Unrecognised platform."
	exit
fi

# Change to script dir
cd "$(dirname "$0")"

# Check directory
dir=${PWD##*/}
if [ $dir == 'unix' ]; then
    cd ../..
fi

# Resetting lib folder
rm -rf lib
mkdir lib
mkdir lib/debug
mkdir lib/release
lib_dir=$PWD/lib
lib_debug_dir=$lib_dir/debug
lib_release_dir=$lib_dir/release

# Resetting include dir
rm -rf include/CLI
rm -rf include/fluidsynth
rm -f include/fluidsynth.h
rm -rf include/midifile
rm -rf include/rtmidi
rm -rf include/SFML
inc_dir=$PWD/include

# Building...
midistar_dir=$PWD
ext_dir=$PWD/external

cecho "Setting up git submodules..."
git submodule init
git submodule update

cecho "\nPreparing CLI11..."
cd $ext_dir/CLI11
git clean -fdx
cp -r include/CLI $inc_dir/.

cecho "\nBuilding fluidsynth..."
cd $ext_dir/fluidsynth
git clean -fdx
mkdir -p build
cd build
mkdir -p debug
cd debug
cmake ../.. -DCMAKE_BUILD_TYPE=Debug
make
cp -r src/FluidSynth.framework $lib_debug_dir/.
cd ..
mkdir -p release
cd release
cmake ../.. -DCMAKE_BUILD_TYPE=Release
make
cp -r src/FluidSynth.framework $lib_release_dir/.
cp -r ../../include/fluidsynth $inc_dir
cp include/fluidsynth.h $inc_dir/.
cp include/fluidsynth/version.h $inc_dir/fluidsynth/.

cecho "\nBuilding midifile..."
cd $ext_dir/midifile
git clean -fdx
make library
cp lib/*.dylib $lib_debug_dir/.
cp lib/*.dylib $lib_release_dir/.
mkdir -p $inc_dir/midifile
cp include/*.h $inc_dir/midifile/.

cecho "\nBuilding rtmidi..."
cd $ext_dir/rtmidi
git clean -fdx
./autogen.sh --no-configure
./configure --enable-maintainer-mode --enable-debug --disable-silent-rules
make
cp .libs/*.dylib $lib_debug_dir/.
./configure
make
cp .libs/*.dylib $lib_release_dir/.
mkdir -p $inc_dir/rtmidi
cp *.h $inc_dir/rtmidi/.

cecho "\nBuilding SFML..."
cd $ext_dir/SFML
git clean -fdx
mkdir -p build
cd build
mkdir -p debug
cd debug
cmake ../.. -DCMAKE_BUILD_TYPE=Debug
make
cp lib/*.dylib $lib_debug_dir/.
cd ..
mkdir -p release
cd release
cmake ../.. -DCMAKE_BUILD_TYPE=Release
make
cp lib/*.dylib $lib_release_dir/.
cp -r ../../include/SFML $inc_dir/.

cd $midistar_dir
cecho "\nFinished! Refer to the README file for instructions on building midistar."

